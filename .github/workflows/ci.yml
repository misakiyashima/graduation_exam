name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  scan_ruby:
    name: scan_ruby
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby & cache gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Run Brakeman
        run: bundle exec brakeman

  lint:
    name: lint
    needs: scan_ruby
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby & cache gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true
      - name: Run RuboCop
        run: bundle exec rubocop --fail-level warning

  test:
    name: test
    needs: lint
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_HOST: '%'
        options: >-
          --health-cmd="mysqladmin ping -h db -u root --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      RAILS_ENV: test
      DATABASE_HOST: db
      DATABASE_USERNAME: root
      DATABASE_PASSWORD:
      DISABLE_DATABASE_ENVIRONMENT_CHECK: "true"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby & cache gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install MySQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y default-mysql-client

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            mysqladmin ping -h db -u root --silent && break
            echo "Waiting for MySQLâ€¦ ($i/30)"
            sleep 2
          done

      - name: Create test database manually
        run: |
          mysql -h db -u root -e "CREATE DATABASE IF NOT EXISTS \`myapp_test\` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"

      - name: Load schema & run tests
        run: |
          bundle exec rails db:schema:load
          bundle exec rails test
